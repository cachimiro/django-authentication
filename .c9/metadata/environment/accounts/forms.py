{"filter":false,"title":"forms.py","tooltip":"/accounts/forms.py","undoManager":{"mark":18,"position":18,"stack":[[{"start":{"row":0,"column":0},"end":{"row":7,"column":58},"action":"remove","lines":["from django import forms","","","class UserLoginForm(forms.Form):","    \"\"\"Form to be used to log users in\"\"\"","","    username = forms.CharField()","    password = forms.CharField(widget=forms.PasswordInput)"],"id":2},{"start":{"row":0,"column":0},"end":{"row":23,"column":64},"action":"insert","lines":["from django import forms","from django.contrib.auth.models import User","from django.contrib.auth.forms import UserCreationForm","from django.core.exceptions import ValidationError","","","class UserLoginForm(forms.Form):","    \"\"\"Form to be used to log users in\"\"\"","","    username = forms.CharField()","    password = forms.CharField(widget=forms.PasswordInput)","","","class UserRegistrationForm(UserCreationForm):","    \"\"\"Form used to register a new user\"\"\"","","    password = forms.CharField(widget=forms.PasswordInput)","    password2 = forms.CharField(","        label=\"Password Confirmation\",","        widget=forms.PasswordInput)","    ","    class Meta:","        model = User","        fields = ['email', 'username', 'password1', 'password2']"]}],[{"start":{"row":0,"column":0},"end":{"row":23,"column":64},"action":"remove","lines":["from django import forms","from django.contrib.auth.models import User","from django.contrib.auth.forms import UserCreationForm","from django.core.exceptions import ValidationError","","","class UserLoginForm(forms.Form):","    \"\"\"Form to be used to log users in\"\"\"","","    username = forms.CharField()","    password = forms.CharField(widget=forms.PasswordInput)","","","class UserRegistrationForm(UserCreationForm):","    \"\"\"Form used to register a new user\"\"\"","","    password = forms.CharField(widget=forms.PasswordInput)","    password2 = forms.CharField(","        label=\"Password Confirmation\",","        widget=forms.PasswordInput)","    ","    class Meta:","        model = User","        fields = ['email', 'username', 'password1', 'password2']"],"id":3},{"start":{"row":0,"column":0},"end":{"row":44,"column":24},"action":"insert","lines":["from django import forms","from django.contrib.auth.models import User","from django.contrib.auth.forms import UserCreationForm","from django.core.exceptions import ValidationError","","","class UserLoginForm(forms.Form):","    \"\"\"Form to be used to log users in\"\"\"","","    username = forms.CharField()","    password = forms.CharField(widget=forms.PasswordInput)","","","class UserRegistrationForm(UserCreationForm):","    \"\"\"Form used to register a new user\"\"\"","","    password1 = forms.CharField(","        label=\"Password\",","        widget=forms.PasswordInput)","    password2 = forms.CharField(","        label=\"Password Confirmation\",","        widget=forms.PasswordInput)","    ","    class Meta:","        model = User","        fields = ['email', 'username', 'password1', 'password2']","    ","    def clean_email(self):","        email = self.cleaned_data.get('email')","        username = self.cleaned_data.get('username')","        if User.objects.filter(email=email).exclude(username=username):","            raise forms.ValidationError(u'Email address must be unique')","        return email","","    def clean_password2(self):","        password1 = self.cleaned_data.get('password1')","        password2 = self.cleaned_data.get('password2')","","        if not password1 or not password2:","            raise ValidationError(\"Please confirm your password\")","        ","        if password1 != password2:","            raise ValidationError(\"Passwords must match\")","        ","        return password2"]}],[{"start":{"row":25,"column":63},"end":{"row":25,"column":64},"action":"insert","lines":[","],"id":4}],[{"start":{"row":25,"column":64},"end":{"row":25,"column":65},"action":"insert","lines":[" "],"id":5}],[{"start":{"row":25,"column":65},"end":{"row":25,"column":67},"action":"insert","lines":["''"],"id":6}],[{"start":{"row":25,"column":66},"end":{"row":25,"column":67},"action":"insert","lines":["i"],"id":7}],[{"start":{"row":25,"column":67},"end":{"row":25,"column":68},"action":"insert","lines":[" "],"id":8},{"start":{"row":25,"column":68},"end":{"row":25,"column":69},"action":"insert","lines":["l"]},{"start":{"row":25,"column":69},"end":{"row":25,"column":70},"action":"insert","lines":["i"]},{"start":{"row":25,"column":70},"end":{"row":25,"column":71},"action":"insert","lines":["k"]},{"start":{"row":25,"column":71},"end":{"row":25,"column":72},"action":"insert","lines":["e"]}],[{"start":{"row":25,"column":72},"end":{"row":25,"column":73},"action":"insert","lines":[" "],"id":9},{"start":{"row":25,"column":73},"end":{"row":25,"column":74},"action":"insert","lines":["a"]},{"start":{"row":25,"column":74},"end":{"row":25,"column":75},"action":"insert","lines":["n"]},{"start":{"row":25,"column":75},"end":{"row":25,"column":76},"action":"insert","lines":["a"]},{"start":{"row":25,"column":76},"end":{"row":25,"column":77},"action":"insert","lines":["l"]}],[{"start":{"row":25,"column":76},"end":{"row":25,"column":77},"action":"remove","lines":["l"],"id":10},{"start":{"row":25,"column":75},"end":{"row":25,"column":76},"action":"remove","lines":["a"]},{"start":{"row":25,"column":74},"end":{"row":25,"column":75},"action":"remove","lines":["n"]},{"start":{"row":25,"column":73},"end":{"row":25,"column":74},"action":"remove","lines":["a"]},{"start":{"row":25,"column":72},"end":{"row":25,"column":73},"action":"remove","lines":[" "]},{"start":{"row":25,"column":71},"end":{"row":25,"column":72},"action":"remove","lines":["e"]},{"start":{"row":25,"column":70},"end":{"row":25,"column":71},"action":"remove","lines":["k"]},{"start":{"row":25,"column":69},"end":{"row":25,"column":70},"action":"remove","lines":["i"]},{"start":{"row":25,"column":68},"end":{"row":25,"column":69},"action":"remove","lines":["l"]},{"start":{"row":25,"column":67},"end":{"row":25,"column":68},"action":"remove","lines":[" "]}],[{"start":{"row":25,"column":66},"end":{"row":25,"column":67},"action":"remove","lines":["i"],"id":11}],[{"start":{"row":25,"column":66},"end":{"row":25,"column":67},"action":"insert","lines":["u"],"id":12},{"start":{"row":25,"column":67},"end":{"row":25,"column":68},"action":"insert","lines":["s"]},{"start":{"row":25,"column":68},"end":{"row":25,"column":69},"action":"insert","lines":["e"]}],[{"start":{"row":25,"column":66},"end":{"row":25,"column":69},"action":"remove","lines":["use"],"id":13},{"start":{"row":25,"column":66},"end":{"row":25,"column":74},"action":"insert","lines":["username"]}],[{"start":{"row":25,"column":73},"end":{"row":25,"column":74},"action":"remove","lines":["e"],"id":14},{"start":{"row":25,"column":72},"end":{"row":25,"column":73},"action":"remove","lines":["m"]},{"start":{"row":25,"column":71},"end":{"row":25,"column":72},"action":"remove","lines":["a"]},{"start":{"row":25,"column":70},"end":{"row":25,"column":71},"action":"remove","lines":["n"]}],[{"start":{"row":25,"column":69},"end":{"row":25,"column":70},"action":"remove","lines":["r"],"id":15},{"start":{"row":25,"column":68},"end":{"row":25,"column":69},"action":"remove","lines":["e"]},{"start":{"row":25,"column":67},"end":{"row":25,"column":68},"action":"remove","lines":["s"]},{"start":{"row":25,"column":66},"end":{"row":25,"column":67},"action":"remove","lines":["u"]}],[{"start":{"row":25,"column":66},"end":{"row":25,"column":67},"action":"insert","lines":["s"],"id":16},{"start":{"row":25,"column":67},"end":{"row":25,"column":68},"action":"insert","lines":["y"]}],[{"start":{"row":25,"column":67},"end":{"row":25,"column":68},"action":"remove","lines":["y"],"id":17}],[{"start":{"row":25,"column":67},"end":{"row":25,"column":68},"action":"insert","lines":["u"],"id":18}],[{"start":{"row":25,"column":67},"end":{"row":25,"column":68},"action":"remove","lines":["u"],"id":19}],[{"start":{"row":25,"column":67},"end":{"row":25,"column":68},"action":"remove","lines":["'"],"id":20},{"start":{"row":25,"column":66},"end":{"row":25,"column":67},"action":"remove","lines":["s"]},{"start":{"row":25,"column":65},"end":{"row":25,"column":66},"action":"remove","lines":["'"]},{"start":{"row":25,"column":64},"end":{"row":25,"column":65},"action":"remove","lines":[" "]},{"start":{"row":25,"column":63},"end":{"row":25,"column":64},"action":"remove","lines":[","]}]]},"ace":{"folds":[],"scrolltop":211.5,"scrollleft":0,"selection":{"start":{"row":25,"column":64},"end":{"row":25,"column":64},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1578399002351,"hash":"33192e9c2c672271a969f7afd93bb2e4bacd99db"}